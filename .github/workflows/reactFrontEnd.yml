
name: Build React App (front end)

on:
  push:
    branches:
      - featureReact
  workflow_dispatch:  # Allow manual workflow dispatches

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js and npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Use a valid Node.js version here

      - name: Install dependencies
        run: npm install

      - name: Set CI to false
        run: echo 'CI=false' >> $GITHUB_ENV   #used this action since react script is connsidering warning as error

      - name: Build
        run: npm run build

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
         name: demo_upload_artifact
         path: ReactFrontEnd/public/
        
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
         path: ~/.npm # or wherever your dependencies are stored
         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
         restore-keys: | 
          ${{ runner.os }}-node-
      - name: Static Code Analysis
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=pocalmpracrice
            -Dsonar.projectKey=PocALmPracrice_ReactFrontEnd 
            -Dsonar.sources=.
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONARCLOUDSECRET_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARCLOUD_URL }}

      - name: Send notification on Slack using Webhooks - Success
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "React JS FrontEnd(client)project built successfully."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOKEN }}

      - name: Send notification on Slack using Webhooks - Failure
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "React JS FrontEnd(client) build failed. Please check the build logs for details."
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_TOKEN }}












      - name: Install Snyk
        run: npm install -g snyk
        # uses: snyk/actions/node@master
        

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Test and Monitor Dependencies
        run: snyk test
        continue-on-error: true
      - name: Test and Monitor Dependencies
        run: snyk test --json > snyk-report.json || true
      - name: Install snyk-to-html
        run: npm install -g snyk-to-html

      - name: Convert JSON report to HTML
        run: snyk-to-html -i snyk-report.json -o snyk-report.html
        env:
          PATH: ${{ github.workspace }}/node_modules/.bin:$PATH

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: snyk-report
          path: snyk-report.html
      - name: Fix vulnerabilities
        run: npx snyk wizard --fail-on patchable
        
         
      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
           scan-type: 'fs'
           ignore-unfixed: true
           format: 'sarif'
           output: 'trivy-results.sarif'
           severity: 'CRITICAL'
 
 
      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'github'
          output: 'dependency-results.sbom.json'
          image-ref: '.'
          github-pat: ${{ secrets.GH_TOKEN }}
 
      - name: Create coverage artifact
        uses: actions/upload-artifact@v2
        with:
          name: trivy result
          path: dependency-results.sbom.json
